version: "3"

networks:
    frontend:
        driver: ${NETWORKS_DRIVER}
    backend:
        driver: ${NETWORKS_DRIVER}

volumes:
    mysql:
        driver: ${VOLUMES_DRIVER}
    redis:
        driver: ${VOLUMES_DRIVER}
    mongo:
        driver: ${VOLUMES_DRIVER}

services:
    ### Workspace Utilities ##################################
    # workspace:
    #     build:
    #         context: ./workspace

    ### NGINX Server #########################################
    admin:
        build:
            context: ./admin
            args:
                - http_proxy
                - https_proxy
                - no_proxy
        volumes:
            - ${APP_CODE_PATH_HOST}/easy-mall-admin:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
            - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
            - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
            - ${NGINX_SSL_PATH}:/etc/nginx/ssl
        ports:
            - "${NGINX_HOST_HTTP_PORT}:80"
            - "${NGINX_HOST_HTTPS_PORT}:443"
        networks:
            - frontend
            - backend

    admin-api:
        build:
            context: ./admin-api
        volumes:
            - ${APP_CODE_PATH_HOST}/easy-mall-admin:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
        ports:
            - "${NGINX_HOST_HTTP_PORT}:80"
            - "${NGINX_HOST_HTTPS_PORT}:443"
        networks:
            - frontend
            - backend

    app-api:
        build:
            context: ./app-api
        volumes:
            - ${APP_CODE_PATH_HOST}/easy-mall-api:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
        ports:
            - "${NGINX_HOST_HTTP_PORT}:80"
            - "${NGINX_HOST_HTTPS_PORT}:443"
        networks:
            - frontend
            - backend

    ### MySQL ################################################
    mysql:
        build:
            context: ./mysql
            args:
                - MYSQL_VERSION=${MYSQL_VERSION}
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - TZ=${WORKSPACE_TIMEZONE}
        volumes:
            - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
            - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
        ports:
            - "${MYSQL_PORT}:3306"
        networks:
            - backend

    ### Redis ################################################
    redis:
        build: ./redis
        volumes:
            - ${DATA_PATH_HOST}/redis:/data
        ports:
            - "${REDIS_PORT}:6379"
        networks:
            - backend
